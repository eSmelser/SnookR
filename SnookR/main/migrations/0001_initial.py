# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-12-18 03:40
from __future__ import unicode_literals

import autoslug.fields
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import main.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, default='', editable=False, populate_from='name')),
            ],
        ),
        migrations.CreateModel(
            name='NonUserPlayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, default='', editable=False, populate_from='name')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, default='', editable=False, populate_from='name')),
                ('game', models.CharField(max_length=100)),
                ('start_date', models.DateTimeField(verbose_name='start date')),
                ('end_date', models.DateTimeField(verbose_name='end date')),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Division')),
            ],
        ),
        migrations.CreateModel(
            name='SessionEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField()),
                ('date', models.DateField()),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Session')),
            ],
        ),
        migrations.CreateModel(
            name='Sub',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='sub date')),
                ('session_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.SessionEvent')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, default='', editable=False, populate_from='name')),
            ],
            options={
                'permissions': (('create_team', 'Can create a team'),),
            },
        ),
        migrations.CreateModel(
            name='TeamInvite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('P', 'Pending'), ('A', 'Approved'), ('D', 'Declined')], default='P', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('phone_number', models.IntegerField(blank=True, null=True)),
                ('thumbnail', models.ImageField(null=True, upload_to=main.models.thumbnail_path)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='teaminvite',
            name='invitee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.CustomUser'),
        ),
        migrations.AddField(
            model_name='teaminvite',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Team'),
        ),
        migrations.AddField(
            model_name='team',
            name='players',
            field=models.ManyToManyField(blank=True, to='main.CustomUser'),
        ),
        migrations.AddField(
            model_name='team',
            name='team_captain',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_captain', to='main.CustomUser'),
        ),
        migrations.AddField(
            model_name='sub',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.CustomUser'),
        ),
        migrations.AddField(
            model_name='nonuserplayer',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Team'),
        ),
        migrations.AddField(
            model_name='division',
            name='division_rep',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='division_representative', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='division',
            name='teams',
            field=models.ManyToManyField(blank=True, to='main.Team'),
        ),
    ]
